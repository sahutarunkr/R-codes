# Install and attach the 'lattice' and 'nutshell' packages. 
# Note 'lattice' may already be installed
# We'll look at data for baby births first - this is
# included in 'nutshell'

data(births2006.smpl)
births2006.smpl[1:5,]
dim(births2006.smpl)

# This collects the data by day of birth

births.dow=table(births2006.smpl$DOB_WK)
births.dow
barchart(births.dow,ylab="Day of Week",col="black")

# Here we look at the delivery method and day of delivery - we 
# are looking for a connection

dob.dm.tbl=table(WK=births2006.smpl$DOB_WK,MM=births2006.smpl$DMETH_REC)
dob.dm.tbl
dob.dm.tbl=dob.dm.tbl[,-2]
dob.dm.tbl
barchart(dob.dm.tbl,ylab="Day of Week")
barchart(dob.dm.tbl,horizontal=FALSE,groups=FALSE,xlab="Day of Week",col="black")

# Next we do some data plots

histogram(~DBWT|DPLURAL,data=births2006.smpl,layout=c(1,5),col="black")
histogram(~DBWT|DMETH_REC,data=births2006.smpl,layout=c(1,3),col="black")
densityplot(~DBWT|DPLURAL,data=births2006.smpl,layout=c(1,5),plot.points=FALSE,col="black")
densityplot(~DBWT,groups=DPLURAL,data=births2006.smpl,plot.points=FALSE)

# We'd like to plot the data points, but the dataset is large
# One thing we can do is take a random (smaller) sample and
# use this for the plot. 

index = sample(1:427323, 42000)

dotplot(~DBWT|DPLURAL,data=births2006.smpl[index,],layout=c(1,5),plot.points=FALSE,col="black")

# Scatter plots

xyplot(DBWT~WTGAIN,data=births2006.smpl[index,],col="black")
xyplot(DBWT~WTGAIN|DPLURAL,data=births2006.smpl[index,],layout=c(1,5),col="black")
smoothScatter(births2006.smpl[index,]$WTGAIN,births2006.smpl[index,]$DBWT)

# boxplot is the command for a box plot in the standard 
# graphics package

boxplot(DBWT~APGAR5,data=births2006.smpl,ylab="DBWT",xlab="AGPAR5")
boxplot(DBWT~DOB_WK,data=births2006.smpl,ylab="DBWT",xlab="Day of Week")

# bwplot is the command for a box plot in the lattice graphics
# package. There you need to declare the conditioning variables 
# as factors

bwplot(DBWT~factor(APGAR5)|factor(SEX),data=births2006.smpl,xlab="AGPAR5")
bwplot(DBWT~factor(DOB_WK),data=births2006.smpl,xlab="Day of Week")

# Next we consider alumni donations - this data is contained in 
# the contributions.csv file

don = contribution
don[1:5,]

# Having spaces in column names can cause problems later ...

colnames(don)[2]="Class.Year"
colnames(don)[3]="Marital.Status"
colnames(don)[5]="Next.Degree"
names(don)

# Count the number of records for each class year

table(don$Class.Year)
barchart(table(don$Class.Year),horizontal=FALSE,xlab="Class Year",col="black")

# Create new column for a total amount

don$TGiving=don$FY00Giving+don$FY01Giving+don$FY02Giving+don$FY03Giving+don$FY04Giving
mean(don$TGiving)
sd(don$TGiving)
quantile(don$TGiving,probs=seq(0,1,0.05))
quantile(don$TGiving,probs=seq(0.95,1,0.01))
hist(don$TGiving)

# Straight up histogram does not show much because of extreme 
# values. Let's limit it.

dd2 = don[don$TGiving != 0,]
hist(dd2$TGiving)
dd3 = dd2[dd2$TGiving <= 1000,]

# Identify the top donors

ddd=don[don$TGiving>=30000,]
ddd
ddd1=ddd[,c(1:5,12)]
ddd1
ddd1[order(ddd1$TGiving,decreasing=TRUE),]

# We create barcharts to further explore the data

t4=tapply(don$TGiving,don$Major,mean,na.rm=TRUE)
t4
t5=table(don$Major)
t5
t6=cbind(t4,t5)
t7=t6[t6[,2]>10,]
t7[order(t7[,1],decreasing=TRUE),]
barchart(t7[,1],col="black")
t4=tapply(don$TGiving,don$Next.Degree,mean,na.rm=TRUE)
t4
t5=table(don$Next.Degree)
t5
t6=cbind(t4,t5)
t7=t6[t6[,2]>10,]
t7[order(t7[,1],decreasing=TRUE),]
barchart(t7[,1],col="black")

# Load in the oj.csv dataset
# Most of the data is numeric, some variables are factors

oj$store <- as.factor(oj$store)
# oj$brand <- as.factor(oj$brand) already done is using base reader
oj$feat <- as.factor(oj$feat)
summary(oj)

t1=tapply(oj$logmove,oj$brand,FUN=mean,na.rm=TRUE)
t1
t2=tapply(oj$logmove,INDEX=list(oj$brand,oj$week),FUN=mean,na.rm=TRUE)
t2
plot(t2[1,],type= "l",xlab="week",ylab="dominicks",ylim=c(7,12))
plot(t2[2,],type= "l",xlab="week",ylab="minute.maid",ylim=c(7,12))
plot(t2[3,],type= "l",xlab="week",ylab="tropicana",ylim=c(7,12))
# Let's get all three plots together, and just look at weeks 40 - 160
logmove=c(t2[1,],t2[2,],t2[3,])

# We create some data to add to the logmove data to create the 
# plots we want

week1=c(40:160)
week=c(week1,week1,week1)
brand1=rep(1,121)
brand2=rep(2,121)
brand3=rep(3,121)
brand=c(brand1,brand2,brand3)
xyplot(logmove~week|factor(brand),type= "l",layout=c(1,3),col="black")
boxplot(logmove~brand,data=oj)
histogram(~logmove|brand,data=oj,layout=c(1,3))
densityplot(~logmove|brand,data=oj,layout=c(1,3),plot.points=FALSE)
densityplot(~logmove,groups=brand,data=oj,plot.points=FALSE)

# We look for relation beween sales and price

xyplot(logmove~price,data=oj,col="black")
xyplot(logmove~price|brand,data=oj,layout=c(1,3),col="black")
smoothScatter(oj$price,oj$logmove)
densityplot(~logmove,groups=feat, data=oj, plot.points=FALSE)
xyplot(logmove~price,groups=feat, data=oj)

# We look at one particular store

oj1=oj[oj$store == 5,]
xyplot(logmove~week|brand,data=oj1,type="l",layout=c(1,3),col="black")

# We explore the impact of neighborhood per capita income on 
# sales

t21=tapply(oj$INCOME,oj$store,FUN=mean,na.rm=TRUE)
t21
t21[t21==max(t21)]
t21[t21==min(t21)]

# Select the max an min income store data rows and do rbind to 
# collect

oj1=oj[oj$store == 62,]
oj2=oj[oj$store == 75,]
oj3=rbind(oj1,oj2)
xyplot(logmove~price|store,data=oj3)
xyplot(logmove~price|store,groups=feat,data=oj3)
